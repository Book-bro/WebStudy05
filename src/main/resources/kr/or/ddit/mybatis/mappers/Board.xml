<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.board.dao.BoardDAO">
	<sql id="searchFrag">
		<where>
	    	<if test="simpleCondition neq null and @org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.searchWord)">
	    		<choose>
	    			<when test="simpleCondition.searchType eq 'writer'">
	    				INSTR(BO_WRITER, #{simpleCondition.searchWord}) > 0 
	    			</when>
	    			<when test="simpleCondition.searchType eq 'content'">
	    				INSTR(BO_CONTENT, #{simpleCondition.searchWord}) > 0 
	    			</when>
	    			<otherwise>
	    				INSTR(BO_WRITER, #{simpleCondition.searchWord}) > 0 
	    				OR
	    				INSTR(BO_CONTENT, #{simpleCondition.searchWord}) > 0 
	    			</otherwise>
	    		</choose>
	    	</if>
	    </where>
	</sql>

	<select id="selectTotalRecord" parameterType="PagingVO" resultType="int">
		SELECT COUNT(*)
		FROM FREEBOARD
		<include refid="searchFrag"/>
	</select>

	<select id="selectBoardList" parameterType="PagingVO" resultType="BoardVO">
		WITH ORDEREDBOARD AS(
		    SELECT BO_NO, BO_TITLE, BO_WRITER, BO_MAIL, BO_DATE, BO_HIT
		            , (
		                SELECT COUNT(ATT_NO)
		                FROM ATTATCH
		                WHERE ATTATCH.BO_NO = FREEBOARD.BO_NO
		            )ATT_COUNT
		    FROM FREEBOARD
		    <include refid="searchFrag"/>
		    ORDER BY BO_NO DESC
		)
		SELECT A.*
		FROM(
		    SELECT ROWNUM RNUM, ORDEREDBOARD.*
		    FROM ORDEREDBOARD
		) A
		WHERE RNUM BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<!-- has 관계를 위해 resultMap을 사용 -->
	<resultMap type="BoardVO" id="boardMap" autoMapping="true">
		<id property="boNo" column="BOARD_NO"/> <!-- 컬럼의 중복생성을 피하기위해 특정 앨리어스를 적용 -->
		<collection property="attatchList" ofType="AttatchVO" autoMapping="true"/>
	</resultMap>
	
	<!-- 보드와 첨푸파일 테이블 조인 -->
	<select id="selectBoard" parameterType="int" resultMap="boardMap">
		SELECT
		    a.bo_no BOARD_NO,
		    bo_title,
		    bo_writer,
		    bo_ip,
		    bo_mail,
		    bo_pass,
		    bo_content,
		    bo_date,
		    bo_hit,
		    att_no,
		    att_filename,
		    att_savename,
		    att_mime,
		    att_fancysize,
		    att_download,
		    b.BO_NO
		FROM
		    freeboard a left outer join attatch b on(a.bo_no = b.bo_no)
		WHERE a.BO_NO = #{boNo}
	</select>
	
	<update id="incrementHit" parameterType="int">
		UPDATE FREEBOARD
		SET
		BO_HIT = BO_HIT + 1
		WHERE BO_NO = #{boNo}
	</update>
	
	<insert id="insertBoard" parameterType="BoardVO">
		<selectKey order="BEFORE" resultType="int" keyProperty="boNo">
			SELECT FREEBOARD_SEQ.NEXTVAL
			FROM DUAL
		</selectKey>
		INSERT INTO freeboard (
		    bo_no,
		    bo_title,
		    bo_writer,
		    bo_ip,
		    bo_mail,
		    bo_pass, 
		    bo_content,
		    bo_date,
		    bo_hit
		) VALUES (
		    #{boNo,jdbcType=NUMERIC}
			, #{boTitle,jdbcType=VARCHAR}
			, #{boWriter,jdbcType=VARCHAR}
			, #{boIp,jdbcType=VARCHAR}
			, #{boMail,jdbcType=VARCHAR}
			, #{boPass,jdbcType=VARCHAR}
			, #{boContent,jdbcType=CLOB}
			, sysdate
			, 0
		)
	</insert>
	
	
	<delete id="deleteBoard"></delete>

</mapper>
















